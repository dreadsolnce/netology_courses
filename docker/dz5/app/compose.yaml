services:
  web:  
    image: kolchinvladimir/app:1.0.0
    hostname: app
    environment:
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    ports:
      - "5000:5000"
    restart: on-failure
    depends_on:
      - db
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

#  db:
#    image: mysql:8.0
#    hostname: mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#    command: --default-authentication-plugin=caching_sha2_password
#    ports:
#      - "3306:3306"
#    volumes:
#      - volume_db:/var/lib/mysql
#    healthcheck:
#      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
#      start_period: 5s
#      interval: 5s
#      timeout: 5s
#      retries: 55
#    restart: on-failure
#
#  reverse-proxy:
#    image: haproxy:2.4
#    restart: always
#    ports:
#      - "127.0.0.1:8080:8080"
#    volumes:
#      - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
#    deploy:
#      replicas: 1
#      update_config:
#        parallelism: 1
#        delay: 10s
#      restart_policy:
#        condition: on-failure
#
#  ingress-proxy:
#    image: nginx:latest
#    restart: always
#    volumes:
#      - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
#      - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
#    deploy:
#      replicas: 1
#      update_config:
#        parallelism: 1
#        delay: 10s
#      restart_policy:
#        condition: on-failure
#volumes:
#  volume_db:

