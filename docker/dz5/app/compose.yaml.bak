#include:
#  - proxy.yaml
services:  
  web:  
#    image: cr.yandex/crpamnfpng0opihqtj7g/app:1.0.0  
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: app  
    hostname: app  
    environment:  
      - DB_HOST=mysql
      - DB_USER=${MYSQL_USER}  
      - DB_PASSWORD=${MYSQL_PASSWORD}  
      - DB_NAME=${MYSQL_DATABASE}  
    ports:  
      - "5000:5000"  
    restart: on-failure  
    depends_on:  
      - db
    networks:  
      backend:  
        ipv4_address: 172.20.0.5  
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  
  db:  
    image: mysql:8.0  
    container_name: mysql  
    hostname: mysql  
    environment:  
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}  
      - MYSQL_USER=${MYSQL_USER}  
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}  
      - MYSQL_DATABASE=${MYSQL_DATABASE}  
    command: --default-authentication-plugin=caching_sha2_password
    ports:  
      - "3306:3306"  
    volumes:  
      - volume_db:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    restart: on-failure 
    networks:  
      backend:  
        ipv4_address: 172.20.0.10  
  reverse-proxy:
    image: haproxy:2.4
    restart: always
    networks:
        backend: {}
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - ./haproxy/reverse/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:rw
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  ingress-proxy:
    image: nginx:latest
    restart: always
    network_mode: host
    volumes:
      - ./nginx/ingress/default.conf:/etc/nginx/conf.d/default.conf:rw
      - ./nginx/ingress/nginx.conf:/etc/nginx/nginx.conf:rw
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
volumes:  
  volume_db:

networks:
  backend:
    driver: bridge
    ipam:
     config:
       - subnet: 172.20.0.0/24
