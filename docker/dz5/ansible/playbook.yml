---
- name: control-node
  hosts: group_control
  gather_facts: true
  tasks:
    - name: Инициализируем кластер
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_default_ipv4.address }}"

    - name: Получаем токен для подключения worker nodes
      ansible.builtin.shell: docker swarm join-token -q worker
      register: manager_token

    - name: Создаем файл из шаблона
      ansible.builtin.template:
        src: "{{ inventory_dir }}/template/package.j2"
        dest: "{{ inventory_dir }}/package.json"
      vars:
        ipserver: "{{ ansible_default_ipv4.address }}"
        token: "{{ manager_token.stdout }}"
      delegate_to: localhost

- name: managed-node
  hosts: group_managed
  gather_facts: true
  tasks:
    - name: Загружаем переменные из файла
      ansible.builtin.include_vars:
        file: "{{ inventory_dir }}/package.json"
        name: control_node_vars

    - name: debug
      debug:
        var: control_node_vars['ipserver']

    - name: Инициализируем ноду в кластере
      ansible.builtin.shell:
        cmd: docker swarm join --token "{{ control_node_vars['token'] }}" "{{ control_node_vars['ipserver'] }}":2377

- name: view cluster
  hosts: group_control
  tasks:
    - name: Проверка состояния кластера
      ansible.builtin.shell:
        cmd: docker node ls
      register: state_cluster

#    - name: Состояние кластера
#      debug:
#        msg: "Состояние кластера: {{ state_cluster }}"


