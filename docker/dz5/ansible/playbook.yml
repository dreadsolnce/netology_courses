---
- name: control-node
  hosts: group_control
  vars:
    mygroupvars: "{{ inventory_dir }}/group_vars/all/credentionals.yml"
  tasks:
    - name: Debug
      ansible.builtin.debug:
        msg: "{{ ansible_distribution }}"
    - name: init cluster
      community.docker.docker_swarm:
        state: present
    - name: Gets token
      ansible.builtin.shell: docker swarm join-token manager -q
      register: manager_token
    - name: Debug
      debug:
        msg: "Токен для подключения: {{ manager_token.stdout }}"
    - name: Get ip
      debug: 
        msg: "{{ ansible_default_ipv4.address }}"
      register: ip_control_node
    - name: Debug ip control node
      debug:
#        msg: "ip адрес control-node: {{ ansible_default_ipv4.address }}"
        msg: "ip адрес control-node: {{ ip_control_node.msg }}"
    - name: Get var serverip
      delegate_to: localhost
      lineinfile:
        path: "{{ mygroupvars }}"
        regexp: "^serverip:"
        line: "serverip: {{ ansible_default_ipv4.address }}"
        state: present
    - name: Get var token
      delegate_to: localhost
      lineinfile: 
        path: "{{ mygroupvars }}"
        regexp: "^token:"
        line: "token: {{ manager_token.stdout }}"
        state: present

- name: managed-node
  hosts: group_managed
  tasks:
    - name: Debug
      ansible.builtin.debug:
        msg: "{{ ansible_distribution }}"
    - name: Debug 1
      debug:
        msg: "{{ token }}"
    - name: Инициализируем ноду в кластере
      community.docker.docker_swarm:
        state: join
#        advertise_addr: "{{ ansible_default_ipv4.address }}"
        join_token: "{{ token }}"
        remote_addrs: ['{{ serverip }}:2377']
